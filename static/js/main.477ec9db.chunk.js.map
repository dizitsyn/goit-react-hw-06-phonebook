{"version":3,"sources":["redux/actions.js","component/contsctList/ContactList.jsx","component/form/Form.jsx","component/filter/Filter.jsx","component/App.js","redux/reducer.js","redux/store.js","index.js"],"names":["addContact","createAction","name","number","payload","id","uuid","delContact","filter","getFilterContact","contacts","contact","toLocaleLowerCase","includes","connect","items","dispatch","deleteContact","actions","map","onClick","Form","state","inputHandler","e","target","value","setState","submitHandler","preventDefault","props","onSubmit","this","onChange","type","pattern","title","required","Component","filterHandler","App","createReducer","_","combineReducers","ContsctsPersistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","loger","store","configureStore","reducer","persistReducer","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.477ec9db.chunk.js","sourcesContent":["import { v4 as uuid } from \"uuid\";\r\nimport { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst addContact = createAction(\"phoneBook/add\", ({ name, number }) => ({\r\n  payload: {\r\n    id: uuid(),\r\n    name,\r\n    number,\r\n  },\r\n}));\r\n\r\nconst delContact = createAction(\"phoneBook/del\");\r\nconst filter = createAction(\"phoneBook/filter\");\r\n\r\n// const addContact = ({ name, number }) => ({\r\n//   type: types.ADD,\r\n//   payload: {\r\n//     id: uuid(),\r\n//     name,\r\n//     number,\r\n//   },\r\n// });\r\n\r\n// const delContact = (contactId) => ({\r\n//   type: types.DEL,\r\n//   payload: contactId,\r\n// });\r\n\r\n// const filter = (value) => ({\r\n//   type: types.FILTER,\r\n//   payload: value,\r\n// });\r\n\r\nexport default { addContact, delContact, filter };\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport actions from '../../redux/actions';\r\n\r\nconst ContactList = ({contacts, deleteContact}) => {\r\n    return (\r\n        <ul>\r\n            {contacts.map(({id, name, number}) =>\r\n                <li key={id}>\r\n                    <p>{name}:{number}</p>\r\n                    <button id={id} onClick={()=>deleteContact(id)}>Delete</button>\r\n                </li>)}\r\n        </ul>\r\n    );\r\n}\r\n\r\n\r\n \r\n  const getFilterContact = (filter, contacts) => {\r\n    return contacts.filter((contact) =>\r\n      contact.name\r\n        .toLocaleLowerCase()\r\n        .includes(filter.toLocaleLowerCase())\r\n    );\r\n  };\r\n\r\nconst mapStateToProps = ({contacts:{ filter, items }}) => ({\r\n\r\n    contacts: getFilterContact (filter, items)\r\n\r\n  \r\n})  \r\n\r\nconst mapDispatchToProps = dispatch=>({\r\n    deleteContact: id => dispatch(actions.delContact(id)),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport actions from '../../redux/actions'\r\n\r\n\r\n class Form extends Component {\r\n    state = {\r\n         name: \"\",\r\n        number: \"\",\r\n    }\r\n\r\n    inputHandler = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n    submitHandler = (e) => {\r\n    e.preventDefault();\r\n    this.props.addContact(this.state)\r\n  };\r\n    render() {\r\n        return (\r\n           <form onSubmit={this.submitHandler}>\r\n          <label>Name<input\r\n            onChange={this.inputHandler}\r\n            type=\"text\"\r\n              name=\"name\"\r\n              \r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            /></label>\r\n            \r\n            <label>Tel\r\n             \r\n          <input\r\n            onChange={this.inputHandler}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          /></label>\r\n          <button type=\"submit\">Add</button>\r\n        </form>\r\n        )\r\n    }\r\n}\r\n\r\n const mapDispatchToProps = dispatch => ({\r\n  addContact: contact=>dispatch(actions.addContact(contact))\r\n})\r\n\r\nexport default connect(null,mapDispatchToProps)(Form);","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport actions from '../../redux/actions'\r\n\r\n\r\n function Filter({filterHandler,filter}) {\r\n    return (\r\n        <label>find\r\n        <input\r\n            value = {filter}\r\n            onChange={filterHandler} />\r\n        </label>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    value: state.contacts.filter \r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    filterHandler: e=>dispatch(actions.filter(e.target.value))\r\n})\r\n\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps )(Filter) ","import React, { Component } from \"react\";\r\nimport ContactList from \"./contsctList/ContactList\";\r\nimport Form from \"./form/Form\";\r\nimport Filter from \"./filter/Filter\";\r\n\r\nexport default class App extends Component {\r\n  // state = {\r\n  //   contacts: [\r\n  //     { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n  //     { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n  //     { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n  //     { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n  //   ],\r\n\r\n  //   filter: \"\",\r\n  // };\r\n  // filterHandler = (e) => {\r\n  //   const { value } = e.target;\r\n  //   this.setState({ filter: value });\r\n  // };\r\n\r\n  // getFilterContact = () => {\r\n  //   return this.state.contacts.filter((contact) =>\r\n  //     contact.name\r\n  //       .toLocaleLowerCase()\r\n  //       .includes(this.state.filter.toLocaleLowerCase())\r\n  //   );\r\n  // };\r\n\r\n  // deleteContact = (e) => {\r\n  //   const { id } = e.target;\r\n  //   this.setState({\r\n  //     contacts: this.state.contacts.filter((el) => el.id !== id),\r\n  //   });\r\n  // };\r\n\r\n  // addContact = (contact) => {\r\n  //   this.setState((prevState) => ({\r\n  //     contacts: [...prevState.contacts, { id: uuid(), ...contact }],\r\n  //   }));\r\n  // };\r\n\r\n  // componentDidUpdate(prevProps, prevState) {\r\n  //   console.log(this.state.contacts);\r\n  //   if (this.state.contacts !== prevState.contacts) {\r\n  //     localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\r\n  //   }\r\n  // }\r\n\r\n  // componentDidMount() {\r\n  //   const newContacts = JSON.parse(localStorage.getItem(\"contacts\"));\r\n  //   if (newContacts) {\r\n  //     this.setState({ contacts: newContacts });\r\n  //   }\r\n  // }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Phonebook</h1>\r\n        <Form />\r\n        <h2>Contacts</h2>\r\n\r\n        <Filter />\r\n        <ContactList />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport actions from \"./actions\";\r\n\r\nconst items = createReducer([], {\r\n  [actions.addContact]: (state, { payload }) => [...state, payload],\r\n  [actions.delContact]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [actions.filter]: (_, { payload }) => payload,\r\n});\r\n\r\n// const items = (state = [], { type, payload }) => {\r\n//   switch (type) {\r\n//     case types.ADD: {\r\n//       return [...state, payload];\r\n//     }\r\n//     case types.DEL: {\r\n//       return state.filter(({ id }) => id !== payload);\r\n//     }\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// const filter = (state = \"\", { type, payload }) => {\r\n//   switch (type) {\r\n//     case types.FILTER:\r\n//       return payload;\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport loger from \"redux-logger\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport reducer from \"./reducer\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\n\r\nconst ContsctsPersistConfig = {\r\n  key: \"contacts\",\r\n  storage,\r\n  blacklist: [\"filter\"],\r\n};\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  loger,\r\n];\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(ContsctsPersistConfig, reducer),\r\n  },\r\n  middleware,\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor };\r\n// const rootReducer = combineReducers({\r\n//   contacts: reducer,\r\n// });\r\n\r\n// const store = createStore(rootReducer, composeWithDevTools());\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./component/App\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}